# Generated by Django 5.2.3 on 2025-07-11 03:45

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('duration', models.DurationField()),
                ('category', models.PositiveSmallIntegerField(choices=[(1, '전신'), (2, '상체'), (3, '하체'), (4, '코어')])),
                ('description', models.TextField()),
                ('image1', models.ImageField(upload_to='exercise/image')),
                ('image2', models.ImageField(upload_to='exercise/image')),
                ('image3', models.ImageField(upload_to='exercise/image')),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('exercise_routine_duration', models.DurationField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_histories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExerciseReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('exercise_history', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_review', to='exercises.exercisehistory')),
            ],
        ),
        migrations.CreateModel(
            name='ReactedExerciseReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('emoji', models.PositiveSmallIntegerField(choices=[(1, '😣'), (2, '😑'), (3, '😌'), (4, '😶'), (5, '😊')])),
                ('exercise_review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='exercises.exercisereview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reacted_exercise_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['emoji'],
            },
        ),
        migrations.CreateModel(
            name='ScrappedExerciseRoutine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scrapped_at', models.DateTimeField()),
                ('order', models.PositiveSmallIntegerField(db_index=True)),
                ('difficulty', models.PositiveSmallIntegerField()),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='scrapped_exercise_routines', to='exercises.exercise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scrapped_exercise_routines', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-scrapped_at', 'order'],
            },
        ),
        migrations.AddConstraint(
            model_name='exercisehistory',
            constraint=models.UniqueConstraint(fields=('user', 'created_at'), name='unique_user_created_at', violation_error_message='사용자는 같은 시간에 운동을 동시에 할 수 없습니다.'),
        ),
        migrations.AddConstraint(
            model_name='reactedexercisereview',
            constraint=models.UniqueConstraint(fields=('user', 'exercise_review'), name='unique_user_exercise_review', violation_error_message='사용자는 운동 리뷰 반응을 한 개만 남길 수 있습니다.'),
        ),
        migrations.AddConstraint(
            model_name='scrappedexerciseroutine',
            constraint=models.UniqueConstraint(fields=('user', 'scrapped_at', 'order'), name='unique_user_scrapped_at_order', violation_error_message='사용자의 운동 루틴은 순번을 중복해서 가질 수 없습니다.'),
        ),
    ]
